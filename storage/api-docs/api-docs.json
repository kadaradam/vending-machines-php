{
    "openapi": "3.0.0",
    "info": {
        "title": "Vending Machines Api Documentation",
        "description": "Vending Machines Api Documentation",
        "contact": {
            "name": "kadaradam",
            "email": "contact@kadaradam.dev"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/register/seller": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a seller user.",
                "operationId": "registerSellerUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/RegisterUserRequest"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserResource"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/register/buyer": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a buyer user.",
                "operationId": "registerBuyerUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/RegisterUserRequest"
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserResource"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Authenticates a user.",
                "operationId": "loginUser",
                "requestBody": {
                    "$ref": "#/components/requestBodies/LoginUserRequest"
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "accessToken": "2|DDUPRhVGMIUtXFIs1S0axZqeMXcGSpOPn1lJ4NS5"
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/user/me": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Display the actual logged in user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/UserResource"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/{userId}": {
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update your user profile property in storage.",
                "operationId": "updateUserPut",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The id of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateUserRequestPut"
                },
                "responses": {
                    "403": {
                        "description": "Action is unauthorized"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Remove your user from storage.",
                "operationId": "deleteUser",
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "403": {
                        "description": "Action is unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update your whole user profile in storage.",
                "description": "Update your whole user profile in storage.",
                "operationId": "updateUserPatch",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The id of user to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/UpdateUserRequestPatch"
                },
                "responses": {
                    "403": {
                        "description": "Action is unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "responses": {
            "UserResource": {
                "description": "All information about the user",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "data": {
                                    "properties": {
                                        "id": {
                                            "description": "The id of the user",
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "username": {
                                            "description": "The username of the user",
                                            "type": "string",
                                            "example": "JohnSnow"
                                        },
                                        "email": {
                                            "description": "The email of the user",
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "role": {
                                            "description": "The role of the user",
                                            "type": "string",
                                            "enum": [
                                                "seller",
                                                "buyer"
                                            ],
                                            "example": "seller"
                                        },
                                        "createdAt": {
                                            "description": "User created timestamp",
                                            "type": "timestamp",
                                            "example": "2014-01-01T23:28:56.782Z"
                                        },
                                        "updatedAt": {
                                            "description": "User updated timestamp",
                                            "type": "timestamp",
                                            "example": "2014-01-01T23:28:56.782Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "requestBodies": {
            "LoginUserRequest": {
                "description": "Login with user",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "email": {
                                    "description": "The email of the user",
                                    "type": "string",
                                    "example": "john@example.com"
                                },
                                "password": {
                                    "description": "The password of the user",
                                    "type": "string",
                                    "example": "Example123"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "RegisterUserRequest": {
                "description": "Register a new user",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "username": {
                                    "description": "The username of the user",
                                    "type": "string",
                                    "example": "JohnSnow"
                                },
                                "email": {
                                    "description": "The email of the user",
                                    "type": "string",
                                    "example": "john@example.com"
                                },
                                "password": {
                                    "description": "The password of the user",
                                    "type": "string",
                                    "example": "Example123"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "UpdateUserRequestPatch": {
                "description": "List of available properties to update",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "username": {
                                    "description": "The username of the user",
                                    "type": "string",
                                    "example": "JohnSnow"
                                },
                                "email": {
                                    "description": "The email of the user",
                                    "type": "string",
                                    "example": "john@example.com"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "UpdateUserRequestPut": {
                "description": "List of available properties to update",
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "required": [
                                "username",
                                "email"
                            ],
                            "properties": {
                                "username": {
                                    "description": "The username of the user",
                                    "type": "string",
                                    "example": "JohnSnow"
                                },
                                "email": {
                                    "description": "The email of the user",
                                    "type": "string",
                                    "example": "john@example.com"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}